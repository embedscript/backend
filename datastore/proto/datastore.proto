syntax = "proto3";

package datastore;

option go_package = "proto;datastore";

// These endpoints are experimental and will likely change,
// especially related to indexes.
service Datastore {
	rpc Create(CreateRequest) returns (CreateResponse) {}
	rpc Update(UpdateRequest) returns (UpdateResponse) {}
	rpc Read(ReadRequest) returns (ReadResponse) {}
	rpc Delete(DeleteRequest) returns (DeleteResponse) {}
	rpc CreateIndex(CreateIndexRequest) returns (CreateIndexResponse) {}
	rpc CreateRule(CreateRuleRequest) returns (CreateRuleResponse) {}
	rpc ReadRules(ReadRulesRequest) returns (ReadRulesResponse) {};
}

message Query {
	// Field to query by
	// eg. email
	string fieldName = 1;
	// Type of query
	// eg. eq
	string type = 2;
	Index index = 3;
	Order  order = 4;
	string value = 5;
	int64 offset = 6;
	int64 limit = 7;
}

// Order is the order of the index
message Order {
	// Field to order on
	// eg. age
	string fieldName = 1;
	// Ordered or unordered keys. Ordered keys are padded.
	// Default is true. This option only exists for strings, where ordering
	// comes at the cost of having rather long padded keys.
	enum OrderType {
    	UNORDERED = 0;
    	ASCENDING = 1;
    	DESCENDING = 2;
  	}
	// Type of the ordering
	// eg. ascending, descending, unordered
	OrderType orderType = 2;
}

message Index {
	// Field to index on.
	// eg. email
	string fieldName = 1;
	// Type of index
	// eg. eq
	string type = 2;
	Order order = 3;

	// Do not allow duplicate values of this field in the index.
	// Useful for emails, usernames, post slugs etc.
	bool unique = 4;

	// Strings for ordering will be padded to a fix length
	// Not a useful property for Querying, please ignore this at query time.
	// Number is in bytes, not string characters. Choose a sufficiently big one.
	// Consider that each character might take 4 bytes given the
	// internals of reverse ordering. So a good rule of thumbs is expected
	// characters in a string X 4
	int64 stringOrderPadLength = 5;
	// True = base32 encode ordered strings for easier management
	// or false = keep 4 bytes long runes that might dispaly weirdly
	bool Base32Encode = 6;

	string FloatFormat = 7;
	float Float64Max = 8;
	float Float32Max = 9;
}


message CreateRequest {
	string project = 1;
	string table = 2;
	// JSON marshalled record to save
	string value = 3;
}

message CreateResponse {
}

message UpdateRequest {
	string project = 1;
	string table = 2;
	// JSON marshalled record to save
	string value = 3;
}

message UpdateResponse {

}

message ReadRequest {
	string project = 1;
	string table = 2;
	Query query = 3;
}

message ReadResponse {
	// JSON marshalled record found
	string value = 1;
}

message DeleteRequest {
	string project = 1;
	string table = 2;
	Query query = 3;
}

message DeleteResponse {
}

message CreateIndexRequest {
	string project = 1;
	string table = 2;
	Index index = 3	;
}

message CreateIndexResponse {

}

message Rule {
	string project = 1;
	string table = 2;
	// roles: admin, user, unregistered
	string role = 3;
	// write, read
	string action = 4;
}

message CreateRuleRequest {
	Rule rule = 1;
}

message CreateRuleResponse {

}

message ReadRulesRequest {
	string project = 1;
	string table = 2;
}

message ReadRulesResponse {
	repeated Rule rules = 1;
}
